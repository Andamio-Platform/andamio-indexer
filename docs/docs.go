// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Andamio Support",
            "url": "https://www.andamio.com/support",
            "email": "dev@andamio.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addresses": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new address to the indexer for monitoring transactions and UTxOs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Addresses"
                ],
                "summary": "Add Address",
                "operationId": "addAddress",
                "parameters": [
                    {
                        "description": "The address object containing the address string to be added.",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewmodel.AddressRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully added address.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing address.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes an address from the tracking list.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Addresses"
                ],
                "summary": "Remove Address",
                "operationId": "removeAddress",
                "parameters": [
                    {
                        "description": "The address object containing the address string to be removed.",
                        "name": "addressRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewmodel.AddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully removed address.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing address.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addresses/{address}/assets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of assets held at a specific address, with support for pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Addresses"
                ],
                "summary": "Get Assets by Address",
                "operationId": "getAssetsByAddress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The address to retrieve assets for.",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved assets.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Asset"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid address or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found or no assets found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addresses/{address}/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves transactions associated with a specific address with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Addresses"
                ],
                "summary": "Get Transactions by Address",
                "operationId": "getTransactionsByAddress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The address to retrieve transactions for.",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved transactions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid address or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found or no transactions found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addresses/{address}/utxos": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves UTxOs associated with a specific address with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Addresses"
                ],
                "summary": "Get UTxOs by Address",
                "operationId": "getUTxOsByAddress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The address to retrieve UTxOs for.",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved UTxOs.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid address or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found or no UTxOs found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assets/{asset_fingerprint}/addresses": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of addresses that hold a specific asset fingerprint, with support for pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get Addresses by Asset Fingerprint",
                "operationId": "getAddressesByAssetFingerprint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The asset fingerprint (hex-encoded) to retrieve addresses for.",
                        "name": "asset_fingerprint",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved addresses.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid asset fingerprint or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Asset fingerprint not found or no addresses found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assets/{asset_fingerprint}/utxos": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of UTxOs containing a specific asset fingerprint, with support for pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get UTxOs by Asset Fingerprint",
                "operationId": "getUTxOsByAssetFingerprint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The asset fingerprint (hex-encoded) to retrieve UTxOs for.",
                        "name": "asset_fingerprint",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved UTxOs.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.SimpleUTxO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid asset fingerprint or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Asset fingerprint not found or no UTxOs found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/datums/{datum_hash}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve details of a specific datum by its hash.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datums"
                ],
                "summary": "Get Datum by Hash",
                "operationId": "getDatumByHash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The datum hash (hex-encoded) to retrieve.",
                        "name": "datum_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved datum.",
                        "schema": {
                            "$ref": "#/definitions/viewmodel.Datum"
                        }
                    },
                    "400": {
                        "description": "Invalid datum hash.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Datum not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/datums/{datum_hash}/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of transactions that reference a specific datum hash.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datums"
                ],
                "summary": "Get Transactions by Datum Hash",
                "operationId": "getTransactionsByDatumHash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The datum hash (hex-encoded) to retrieve transactions for.",
                        "name": "datum_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved transactions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid datum hash.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Datum hash not found or no transactions found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/indexer/addresses/{address}/utxos/inputs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves transaction inputs for a given address with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Addresses"
                ],
                "summary": "Get UTXO Inputs by Address",
                "operationId": "getUTxOsInputsByAddress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The address to retrieve UTXO inputs for.",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved UTXO inputs.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.TransactionInput"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid address or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found or no UTXO inputs found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/indexer/addresses/{address}/utxos/outputs": {
            "get": {
                "description": "Retrieves transaction outputs for a given address with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Addresses"
                ],
                "summary": "Get UTXO Outputs by Address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address to retrieve UTXO outputs for",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.TransactionOutput"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/errors.ServerError"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/errors.ServerError"
                        }
                    }
                }
            }
        },
        "/indexer/assets/fingerprint/{asset_fingerprint}/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of transactions associated with a specific asset fingerprint, with support for pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get Transactions by Asset Fingerprint",
                "operationId": "getTransactionsByAssetFingerprint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The asset fingerprint (hex-encoded) to retrieve transactions for.",
                        "name": "asset_fingerprint",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved transactions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid asset fingerprint or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Asset fingerprint not found or no transactions found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/indexer/assets/policy/{policyId}/token/{tokenname}/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves transactions associated with a given policy ID and token name with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get Transactions by Policy ID and Token Name",
                "operationId": "getTransactionsByPolicyIdAndTokenName",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The policy ID to retrieve transactions for (hex-encoded).",
                        "name": "policyId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The token name to retrieve transactions for (hex-encoded).",
                        "name": "tokenname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved transactions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid policy ID, token name, or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Policy ID and token name combination not found or no transactions found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/indexer/assets/policy/{policyId}/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves transactions associated with a given policy ID with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get Transactions by Policy ID",
                "operationId": "getTransactionsByPolicyId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The policy ID to retrieve transactions for (hex-encoded).",
                        "name": "policyId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved transactions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid policy ID or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Policy ID not found or no transactions found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/indexer/assets/token/{tokenname}/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves transactions associated with a given token name with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get Transactions by Token Name",
                "operationId": "getTransactionsByTokenName",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The token name to retrieve transactions for (hex-encoded).",
                        "name": "tokenname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved transactions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token name or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Token name not found or no transactions found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/indexer/transactions/{block_number}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves transactions for a given block number with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Transactions by Block Number",
                "operationId": "getTransactionsByBlockNumber",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The block number to retrieve transactions for.",
                        "name": "block_number",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved transactions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid block number or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Block number not found or no transactions found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/indexer/transactions/{tx_hash}/utxos/inputs": {
            "get": {
                "description": "Retrieves transaction inputs for a given transaction hash.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get UTXO Inputs by Transaction Hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction hash to retrieve UTXO inputs for",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.TransactionInput"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/errors.ServerError"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/errors.ServerError"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/errors.ServerError"
                        }
                    }
                }
            }
        },
        "/indexer/transactions/{tx_hash}/utxos/outputs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves transaction outputs for a given transaction hash.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get UTXO Outputs by Transaction Hash",
                "operationId": "getUTxOsOutputsByTransaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The transaction hash to retrieve UTXO outputs for.",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved UTXO outputs.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.TransactionOutput"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid transaction hash.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found or no UTXO outputs found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/addresses/count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the total number of monitored addresses.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get Total Monitored Addresses Count",
                "operationId": "getAddressesCount",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved addresses count.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/assets/count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the total number of indexed assets.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get Total Indexed Assets Count",
                "operationId": "getAssetsCount",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved assets count.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/latest-block": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the block number and slot number of the most recently indexed block.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get Latest Indexed Block",
                "operationId": "getLatestBlock",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved latest block information.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "block_number": {
                                    "type": "integer"
                                },
                                "slot_number": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/transactions/count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the total number of indexed transactions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get Total Transaction Count",
                "operationId": "getTransactionsCount",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved transaction count.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/by-slot-range": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves transactions within a specified slot number range, with support for pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Transactions by Slot Range",
                "operationId": "getTransactionsBySlotRange",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The start slot number of the range (inclusive).",
                        "name": "start_slot",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The end slot number of the range (inclusive).",
                        "name": "end_slot",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved transactions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid slot number or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No transactions found within the specified slot range.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/{tx_hash}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a transaction by its hash.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Transaction by Hash",
                "operationId": "getTransactionByHash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The transaction hash to retrieve.",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved transaction.",
                        "schema": {
                            "$ref": "#/definitions/viewmodel.Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction hash.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/{tx_hash}/inputs/{input_index}/datum": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the datum associated with a specific transaction input.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Datum for Transaction Input",
                "operationId": "getInputDatum",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The transaction hash (hex-encoded).",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The index of the transaction input.",
                        "name": "input_index",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved datum.",
                        "schema": {
                            "$ref": "#/definitions/viewmodel.Datum"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction hash or input index.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Datum not found for the specified input.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/{tx_hash}/inputs/{input_index}/redeemer": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the redeemer associated with a specific transaction input.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Redeemer for Transaction Input",
                "operationId": "getInputRedeemer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The transaction hash (hex-encoded).",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The index of the transaction input.",
                        "name": "input_index",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved redeemer.",
                        "schema": {
                            "$ref": "#/definitions/viewmodel.Redeemer"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction hash or input index.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Redeemer not found for the specified input.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/{tx_hash}/outputs/{output_index}/datum": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the datum associated with a specific transaction output.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Datum for Transaction Output",
                "operationId": "getOutputDatum",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The transaction hash (hex-encoded).",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The index of the transaction output.",
                        "name": "output_index",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved datum.",
                        "schema": {
                            "$ref": "#/definitions/viewmodel.Datum"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction hash or output index.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Datum not found for the specified output.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/{tx_hash}/redeemers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of redeemers associated with a specific transaction hash.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Redeemers by Transaction Hash",
                "operationId": "getRedeemersByTxHash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The transaction hash (hex-encoded) to retrieve redeemers for.",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved redeemers.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Redeemer"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid transaction hash.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found or no redeemers found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/{tx_hash}/utxos": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the unspent transaction outputs (UTxOs) and inputs associated with a specific transaction hash.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get UTxOs by Transaction Hash",
                "operationId": "getUTxOsByTransaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The transaction hash (hex-encoded) to retrieve UTxOs for.",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved UTxOs.",
                        "schema": {
                            "$ref": "#/definitions/viewmodel.TransactionUTxOs"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction hash.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found or no UTxOs found for the given hash.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/witnesses/{witness_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve details of a specific witness by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Witnesses"
                ],
                "summary": "Get Witness by ID",
                "operationId": "getWitnessById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The witness ID to retrieve.",
                        "name": "witness_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved witness.",
                        "schema": {
                            "$ref": "#/definitions/viewmodel.Witness"
                        }
                    },
                    "400": {
                        "description": "Invalid witness ID.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Witness not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/witnesses/{witness_id}/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of transactions that include a specific witness ID, with support for pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Witnesses"
                ],
                "summary": "Get Transactions by Witness ID",
                "operationId": "getTransactionsByWitnessId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The witness ID to retrieve transactions for.",
                        "name": "witness_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of results to return.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved transactions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodel.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid witness ID or pagination parameters.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Witness ID not found or no transactions found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.ServerError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "viewmodel.AddressRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "viewmodel.Asset": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "name_hex": {
                    "type": "string"
                },
                "policy_id": {
                    "type": "string"
                },
                "utxo_id": {
                    "type": "string"
                },
                "utxo_index": {
                    "type": "integer"
                }
            }
        },
        "viewmodel.Datum": {
            "type": "object",
            "properties": {
                "datum_cbor": {
                    "type": "string"
                },
                "datum_hash": {
                    "type": "string"
                },
                "utxo_id": {
                    "type": "string"
                },
                "utxo_index": {
                    "type": "integer"
                }
            }
        },
        "viewmodel.Redeemer": {
            "type": "object",
            "properties": {
                "cbor": {
                    "description": "CBOR string representation",
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "tag": {
                    "type": "integer"
                },
                "transaction_hash": {
                    "type": "string"
                }
            }
        },
        "viewmodel.SimpleUTxO": {
            "type": "object",
            "properties": {
                "transaction_hash": {
                    "type": "string"
                },
                "utxo_id": {
                    "type": "string"
                },
                "utxo_index": {
                    "type": "integer"
                }
            }
        },
        "viewmodel.Transaction": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string"
                },
                "block_number": {
                    "type": "integer"
                },
                "certificates": {
                    "description": "Slice of CBOR string representations",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fee": {
                    "type": "integer"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewmodel.TransactionInput"
                    }
                },
                "metadata": {
                    "description": "CBOR string representation",
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewmodel.TransactionOutput"
                    }
                },
                "reference_inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewmodel.SimpleUTxO"
                    }
                },
                "slot_number": {
                    "type": "integer"
                },
                "transaction_hash": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "withdrawals": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "witness": {
                    "$ref": "#/definitions/viewmodel.Witness"
                }
            }
        },
        "viewmodel.TransactionInput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "asset": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewmodel.Asset"
                    }
                },
                "cbor": {
                    "description": "CBOR string representation",
                    "type": "string"
                },
                "datum": {
                    "$ref": "#/definitions/viewmodel.Datum"
                },
                "transaction_hash": {
                    "type": "string"
                },
                "utxo_id": {
                    "type": "string"
                },
                "utxo_index": {
                    "type": "integer"
                }
            }
        },
        "viewmodel.TransactionOutput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "asset": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewmodel.Asset"
                    }
                },
                "cbor": {
                    "description": "CBOR string representation",
                    "type": "string"
                },
                "datum": {
                    "$ref": "#/definitions/viewmodel.Datum"
                },
                "utxo_id": {
                    "type": "string"
                },
                "utxo_index": {
                    "type": "integer"
                }
            }
        },
        "viewmodel.TransactionUTxOs": {
            "type": "object",
            "properties": {
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewmodel.TransactionInput"
                    }
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewmodel.TransactionOutput"
                    }
                }
            }
        },
        "viewmodel.Witness": {
            "type": "object",
            "properties": {
                "plutus_data": {
                    "description": "Slice of CBOR string representations",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "plutus_v1_scripts": {
                    "description": "Slice of CBOR string representations",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "plutus_v2_scripts": {
                    "description": "Slice of CBOR string representations",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "plutus_v3_scripts": {
                    "description": "Slice of CBOR string representations",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "redeemers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewmodel.Redeemer"
                    }
                },
                "transaction_hash": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "0.0.0.0:42069",
	BasePath:         "/api/v1/indexer",
	Schemes:          []string{},
	Title:            "Andamio Indexer 1.0.0",
	Description:      "Indexer APIs for Andamio dapp-system.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
